{"version":3,"sources":["webpack:///./src/templates/monthly_archive-template.js"],"names":["MonthlyArchiveTemplate","data","pageContext","year","month","numberOfPages","humanPageNumber","crumbs","breadcrumb","title","className","allMdx","nodes","map","node","key","id","display","justifyContent","alignItems","count","page","onChange","e","p","pathPrefix","monthlyArchivePath","navigate","handleChange"],"mappings":"8FAAA,6JAqCe,SAASA,EAAT,GAAwD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAC7CC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,cAAeC,EAAoBJ,EAApBI,gBACdC,EAAaL,EAA3BM,WAAcD,OAChBE,EAAK,oBAAuBN,EAAvB,IAA+BC,EAG1C,OACE,YAAC,IAAD,CAAQK,MAAOA,GACb,YAAC,aAAD,CAAYF,OAAQA,IACpB,kBAAIG,UAAU,aAAaD,GAGzBR,EAAKU,OAAOC,MAAMC,KAAI,SAAAC,GAAI,OACxB,YAAC,IAAD,CAAaA,KAAMA,EAAMC,IAAKD,EAAKE,QAIvC,YAAC,IAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,WAAW,UACrD,YAAC,IAAD,CAAYC,MAAOf,EAAegB,KAAMf,EAAiBgB,SAAU,SAACC,EAAGC,IAxB1D,SAACrB,EAAMC,EAAOoB,GAEjC,IAAMC,EAAaC,6BAAmBvB,EAAMC,GAC5CuB,mBAAgB,IAANH,EAAWC,EAAgBA,EAA5B,IAA0CD,GAqBkCI,CAAazB,EAAMC,EAAOoB","file":"component---src-templates-monthly-archive-template-js-7861b76f531d5a894c63.js","sourcesContent":["import React from \"react\"\nimport { graphql, navigate } from \"gatsby\"\nimport { Breadcrumb } from 'gatsby-plugin-breadcrumb'\nimport Pagination from '@material-ui/lab/Pagination'\nimport Box from '@material-ui/core/Box'\n\nimport { PostExcerpt } from \"../components/post.js\"\nimport Layout from \"../components/layout.js\"\nimport { monthlyArchivePath } from '../utils/archive_path'\n\nexport const query = graphql`\n    query($fromDate: Date!, $toDate: Date!, $pruneLength: Int!=200, $skip: Int!, $limit: Int!){        \n      allMdx(sort: {fields: frontmatter___date, order: DESC},\n        filter: { frontmatter: { date: { gte: $fromDate, lt: $toDate } }},\n        skip: $skip, limit: $limit) {\n        nodes { \n          id\n          excerpt(truncate: true, pruneLength: $pruneLength)\n\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\"), title, image, description\n          }        \n          fields { \n            directory\n          }\n          slug\n          tableOfContents\n        }\n      }\n    }\n  `\nconst handleChange = (year, month, p) => {\n  //const pathPrefix = `/archives/${year}${month.toString().padStart(2, 0)}`\n  const pathPrefix = monthlyArchivePath(year, month)\n  navigate((p === 1) ? pathPrefix : `${pathPrefix}/${p}`)\n}\n\nexport default function MonthlyArchiveTemplate({ data, pageContext }) {\n  const { year, month, numberOfPages, humanPageNumber } = pageContext\n  const { breadcrumb: { crumbs } } = pageContext\n  const title = `MONTHLY ARCHIVE: ${year}/${month}`\n  //console.log(title)\n\n  return (\n    <Layout title={title}>\n      <Breadcrumb crumbs={crumbs}/>\n      <h1 className=\"pageTitle\">{title}</h1>\n      { /* <PostCards nodes={data.allMdx.nodes} showExcerpt={true} /> */ }\n      {\n        data.allMdx.nodes.map(node=>(\n          <PostExcerpt node={node} key={node.id}/>\n        ))\n      }\n\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Pagination count={numberOfPages} page={humanPageNumber} onChange={(e, p) => { handleChange(year, month, p) }} />\n      </Box>\n    </Layout>\n  )\n}\n\n"],"sourceRoot":""}