{"version":3,"sources":["webpack:///./src/templates/directory_archive-template.js"],"names":["DirectoryTemplate","data","pageContext","directory","numberOfPages","humanPageNumber","crumbs","breadcrumb","title","slice","map","v","crumbLabel","join","className","allMdx","nodes","node","excerptify","display","justifyContent","m","count","page","onChange","_e","p","path","directoryArchivePath","navigate","handleChange"],"mappings":"6FAAA,6JAsCe,SAASA,EAAT,GAAmD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACxCC,EAA8CD,EAA9CC,UAAWC,EAAmCF,EAAnCE,cAAeC,EAAoBH,EAApBG,gBACZC,EAAaJ,EAA3BK,WAAcD,OAGhBE,EAAK,cADGF,EAAOG,MAAM,GAAGC,KAAI,SAAAC,GAAC,OAAGA,EAAEC,cAAYC,KAAK,KAGzD,OACE,YAAC,IAAD,CAAQL,MAAOA,GACb,YAAC,aAAD,CAAYF,OAAQA,IACpB,kBAAIQ,UAAU,aAAaN,GAEzBP,EAAKc,OAAOC,MAAMN,KAAI,SAAAO,GAAI,OACxB,YAAC,IAAD,CAAMC,YAAY,EAAMD,KAAMA,OAIlC,YAAC,IAAD,CAAKE,QAAQ,OAAOC,eAAe,SAASC,EAAG,GAC7C,YAAC,IAAD,CAAYC,MAAOlB,EAAemB,KAAMlB,EAAiBmB,SAAU,SAACC,EAAGC,IAvB1D,SAACvB,EAAWuB,GAC/B,IAAMC,EAAOC,+BAAqBzB,GAClC0B,mBAAgB,IAANH,EAAWC,EAAUA,EAAtB,IAA8BD,GAqB8CI,CAAa3B,EAAWuB","file":"component---src-templates-directory-archive-template-js-64a2bde3c6b2083efa94.js","sourcesContent":["import React from \"react\"\nimport { graphql, navigate } from \"gatsby\"\nimport { Breadcrumb } from 'gatsby-plugin-breadcrumb'\nimport Box from '@material-ui/core/Box'\nimport { Pagination } from '@material-ui/lab'\n\nimport { Post } from \"../components/post.js\"\nimport Layout from \"../components/layout.js\"\nimport { directoryArchivePath } from '../utils/archive_path'\n\nexport const query = graphql`\n    query($regex: String!, $pruneLength: Int!=100, $skip: Int!, $limit: Int!){        \n      allMdx(sort:  {fields: frontmatter___date, order: DESC},\n        filter: {fields: {directory: {regex: $regex}}},\n        skip: $skip, limit: $limit\n         ) {\n        nodes { \n          id\n          excerpt(truncate: true, pruneLength: $pruneLength)\n          slug\n          tableOfContents\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\"), title, image, description\n          }     \n          fields { \n            directory\n          }   \n          \n        }\n      }\n    }\n  `\n\nconst handleChange = (directory, p) => {\n  const path = directoryArchivePath(directory)\n  navigate((p === 1) ? path : `${path}/${p}`)\n}\n\nexport default function DirectoryTemplate({ data, pageContext }) {\n  const { directory, numberOfPages, humanPageNumber } = pageContext\n  const { breadcrumb: { crumbs } } = pageContext\n  //const current_directory = directory.split('/').slice(-1)\n  const label = crumbs.slice(1).map(v=> v.crumbLabel).join('/')\n  const title = `DIRECTORY: ${label}`\n\n  return (\n    <Layout title={title}>\n      <Breadcrumb crumbs={crumbs} />\n      <h1 className=\"pageTitle\">{title}</h1>\n      {\n        data.allMdx.nodes.map(node=>(\n          <Post excerptify={true} node={node}/>\n        ))\n      }\n\n      <Box display=\"flex\" justifyContent=\"center\" m={3}>\n        <Pagination count={numberOfPages} page={humanPageNumber} onChange={(_e,p) => { handleChange(directory, p) }} />\n      </Box>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}