{"version":3,"sources":["webpack:///../gatsby-theme-aksite/src/components/PrevNextPost.js","webpack:///../gatsby-theme-aksite/src/templates/post-template.js"],"names":["PrevNextPost","node","nodes","useAllPosts","sort","a","b","Date","frontmatter","date","index","map","v","id","indexOf","prevPost","nextPost","length","style","marginBottom","Grid","container","item","md","sm","HoverBox","to","fields","slug","Card","postTitle","PostTemplate","data","pageContext","console","log","mdx","crumbs","breadcrumb","title","description","excerpt","cover","publicURL","Layout","tableOfContents","SEO","Breadcrumb","crumbLabel","Post","Divider"],"mappings":"2SA2BeA,EApBM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAQC,cAAcD,MAAME,MAAK,SAACC,EAAGC,GAAQ,OAAO,IAAIC,KAAKF,EAAEG,YAAYC,MAAQ,IAAIF,KAAKD,EAAEE,YAAYC,SAC1GC,EAAQR,EAAMS,KAAI,SAAAC,GAAC,OAAIA,EAAEC,MAAIC,QAAQb,EAAKY,IAC1CE,EAAYL,EAAQ,EAAKR,EAAMQ,EAAQ,GAAK,KAC5CM,EAAYN,EAAQR,EAAMe,OAAUf,EAAMQ,EAAQ,GAAK,KAE7D,OACI,mBAAKQ,MAAO,CAAEC,aAAc,SACxB,YAACC,EAAA,EAAD,CAAMC,WAAS,GACX,YAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACjBT,GAAa,YAACU,EAAA,EAAD,KAAU,YAAC,OAAD,CAAMC,GAAIX,EAASY,OAAOC,MAAM,YAACC,EAAA,EAAD,gBAAed,EAASY,OAAOG,cAE3F,YAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACjBR,GAAa,YAACS,EAAA,EAAD,KAAW,YAAC,OAAD,CAAMC,GAAIV,EAASW,OAAOC,MAAM,YAACC,EAAA,EAAD,KAAOb,EAASW,OAAOG,UAAvB,kBCgB9D,SAASC,EAAT,GAA8C,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAC3CC,QAAQC,IAAR,oBAAgCH,EAAKI,IAAIT,OAAOC,MAChD,IAAM3B,EAAO+B,EAAKI,IACIC,EAAaJ,EAA3BK,WAAcD,OAEhBE,EAAQtC,EAAK0B,OAAOG,WAAa7B,EAAKO,YAAY+B,MAClDC,EAAcvC,EAAKO,YAAYgC,aAAevC,EAAKwC,QACnDC,EAAK,UAAGzC,EAAKO,YAAYkC,aAApB,aAAG,EAAwBC,UAMtC,OACE,YAACC,EAAA,EAAD,CAAQC,gBAAiB5C,EAAK4C,iBAC5B,YAACC,EAAA,EAAD,CAAKP,MAAOA,EAAOC,YAAaA,EAAaE,MAAOA,IACpD,YAACK,EAAA,EAAD,CAAYV,OAAQA,EAAQW,WAAYT,IAExC,YAACU,EAAA,EAAD,CAAMhD,KAAMA,IAEZ,uBAKE,YAACiD,EAAA,EAAD,MACA,YAAC,EAAD,CAAcjD,KAAMA","file":"component---gatsby-theme-aksite-src-templates-post-template-js-2bedb4b7f5f7fd81b52b.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport HoverBox from '../components/HoverBox'\r\nimport Card from '../components/Card'\r\nimport useAllPosts from '../hooks/useAllPosts'\r\n\r\nconst PrevNextPost = ({ node }) => {\r\n    const nodes = useAllPosts().nodes.sort((a, b) => { return new Date(a.frontmatter.date) - new Date(b.frontmatter.date)})\r\n    const index = nodes.map(v => v.id).indexOf(node.id)\r\n    const prevPost = (index > 0) ? nodes[index - 1] : null\r\n    const nextPost = (index < nodes.length) ? nodes[index + 1] : null\r\n\r\n    return (\r\n        <nav style={{ marginBottom: \"2rem\" }}>\r\n            <Grid container>\r\n                <Grid item md={6} sm={12}>\r\n                    {prevPost && (<HoverBox><Link to={prevPost.fields.slug}><Card>《OLDER: {prevPost.fields.postTitle}</Card></Link></HoverBox>)}\r\n                </Grid>\r\n                <Grid item md={6} sm={12}>\r\n                    {nextPost && (<HoverBox ><Link to={nextPost.fields.slug}><Card>{nextPost.fields.postTitle} :NEWER》</Card></Link></HoverBox>)}\r\n                </Grid>\r\n            </Grid>\r\n        </nav>)\r\n\r\n}\r\n\r\nexport default PrevNextPost","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n//import { Breadcrumb } from 'gatsby-plugin-breadcrumb'\nimport Breadcrumb from '../components/Breadcrumb'\nimport Grid from '@material-ui/core/Grid'\nimport Divider from '@material-ui/core/Divider'\n\n\nimport Layout from \"../components/Layout\"\nimport Post from \"../components/Post\"\nimport SEO from '../components/SEO'\nimport PostCard from '../components/PostCard'\nimport PrevNextPost from '../components/PrevNextPost'\n\nexport const post_query = graphql`\n    query ($slug: String!) {\n      mdx(frontmatter: {draft: {ne: true} },\n        fields: { slug: { eq: $slug }}){\n        ...postFieldsBody\n               \n      }\n    }\n\n`\n/*\nconst Siblings = ({ nodes }) => (\n  <nav>\n      <Grid container spacing={3}>\n          {nodes.slice(0, 9).map(v =>\n              (<Grid item xs={12} sm={12} key={v.id}><PostCard node={v} /></Grid>))\n          }\n      </Grid>\n  </nav>\n)\n*/\n\nexport default function PostTemplate({ data, pageContext }) {\n  console.log(`create/template: ${data.mdx.fields.slug}`)\n  const node = data.mdx\n  const { breadcrumb: { crumbs } } = pageContext\n\n  const title = node.fields.postTitle || node.frontmatter.title\n  const description = node.frontmatter.description || node.excerpt\n  const cover = node.frontmatter.cover?.publicURL\n\n  /*\n  const siblings = data.allMdx.nodes.filter(v =>\n    (v.id !== node.id) && (v.fields.directory === node.fields.directory))\n*/\n  return (\n    <Layout tableOfContents={node.tableOfContents} >\n      <SEO title={title} description={description} cover={cover} />\n      <Breadcrumb crumbs={crumbs} crumbLabel={title} />\n\n      <Post node={node}/>\n      \n      <nav>        \n        { /* siblings && (<>\n          <Typography variant=\"h3\">Siblings on '{node.fields.directoryLabel}'</Typography>\n          <Siblings nodes={siblings} />\n        </>) */}\n        <Divider />\n        <PrevNextPost node={node}/>\n      </nav>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}