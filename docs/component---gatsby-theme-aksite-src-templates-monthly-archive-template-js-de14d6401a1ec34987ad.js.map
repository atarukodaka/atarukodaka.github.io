{"version":3,"sources":["webpack:///../gatsby-theme-aksite/src/templates/archive_path.js","webpack:///../gatsby-theme-aksite/src/templates/monthly_archive-template.js"],"names":["exports","monthlyArchivePath","year","month","toString","padStart","directoryArchivePath","directory","MonthlyArchiveTemplate","data","pageContext","crumbs","breadcrumb","title","pagination_parameters","numberOfPages","humanPageNumber","onChangeHandler","_e","p","pathPrefix","navigate","handleChange","nodes","allMdx"],"mappings":"4EACAA,EAAQC,mBAAqB,SAACC,EAAMC,GAChC,MAAM,aAAcD,EAAOC,EAAMC,WAAWC,SAAS,EAAE,IAG3DL,EAAQM,qBAAuB,SAACC,GAC5B,MAAM,IAAKA,I,kCCNf,6GA4Be,SAASC,EAAT,GAAwD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAC7CR,EAAgBQ,EAAhBR,KAAMC,EAAUO,EAAVP,MACQQ,EAAaD,EAA3BE,WAAcD,OAChBE,EAAK,oBAAuBX,EAAvB,IAA+BC,EAGpCW,EAAwB,CAC5BC,cAAeL,EAAYK,cAC3BC,gBAAiBN,EAAYM,gBAC7BC,gBAAiB,SAACC,EAAIC,IAfL,SAACjB,EAAMC,EAAOgB,GAEjC,IAAMC,EAAanB,6BAAmBC,EAAMC,GAC5CkB,mBAAgB,IAANF,EAAWC,EAAgBA,EAA5B,IAA0CD,GAYnBG,CAAapB,EAAMC,EAAOgB,KAE1D,OAAQ,YAAC,IAAD,CAAiBN,MAAOA,EAAOU,MAAOd,EAAKe,OAAOD,MAAOZ,OAAQA,EACvEG,sBAAuBA","file":"component---gatsby-theme-aksite-src-templates-monthly-archive-template-js-de14d6401a1ec34987ad.js","sourcesContent":["\r\nexports.monthlyArchivePath = (year, month)=> {\r\n    return `/archives/${year}${month.toString().padStart(2,0)}`\r\n}\r\n\r\nexports.directoryArchivePath = (directory) => {\r\n    return `/${directory}`\r\n}\r\n","import React from \"react\"\nimport { graphql, navigate } from \"gatsby\"\n//import { Breadcrumb } from 'gatsby-plugin-breadcrumb'\n//import Pagination from '@material-ui/lab/Pagination'\n//import Box from '@material-ui/core/Box'\n\nimport ArchiveTemplate from './archive_template'\n//import { PostCard } from \"../components/post_card.js\"\n//import Layout from \"../components/layout.js\"\nimport { monthlyArchivePath } from './archive_path'\n\nexport const query = graphql`\n      query($fromDate: Date!, $toDate: Date!, $skip: Int!, $limit: Int!){        \n      allMdx(sort: {fields: frontmatter___date, order: DESC},\n        filter: { frontmatter: { date: { gte: $fromDate, lt: $toDate } }},\n        skip: $skip, limit: $limit) {\n        nodes { \n          ...postFields\n        } \n      }\n    }\n  `\nconst handleChange = (year, month, p) => {\n  //const pathPrefix = `/archives/${year}${month.toString().padStart(2, 0)}`\n  const pathPrefix = monthlyArchivePath(year, month)\n  navigate((p === 1) ? pathPrefix : `${pathPrefix}/${p}`)\n}\n\nexport default function MonthlyArchiveTemplate({ data, pageContext }) {\n  const { year, month } = pageContext\n  const { breadcrumb: { crumbs } } = pageContext\n  const title = `MONTHLY ARCHIVE: ${year}/${month}`\n  //console.log(title)\n\n  const pagination_parameters = {\n    numberOfPages: pageContext.numberOfPages,\n    humanPageNumber: pageContext.humanPageNumber,\n    onChangeHandler: (_e, p) => { handleChange(year, month, p) }\n  }\n  return (<ArchiveTemplate title={title} nodes={data.allMdx.nodes} crumbs={crumbs}\n    pagination_parameters={pagination_parameters}/>)\n    \n\n}\n\n"],"sourceRoot":""}