{"componentChunkName":"component---src-templates-post-template-js","path":"/software/twilog2text.html","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://atarukodaka.github.io"}},"mdx":{"id":"5fee50ae-2df0-50fe-9422-72b82198807c","slug":"software/twilog2text.html","tableOfContents":{},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Twilog からテキストのみを抽出するやつ\",\n  \"date\": \"2015-02-27T00:00:00.000Z\",\n  \"category\": \"software\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://atarukodaka.github.io/site/articles/software/togetter2text.html\"\n  }, \"Togetter \\u304B\\u3089\\u30C6\\u30AD\\u30B9\\u30C8\\u306E\\u307F\\u3092\\u62BD\\u51FA\\u3059\\u308B\\u3084\\u3064\\uFF08togetter2text.rb\\uFF09 - Ataru Kodaka Site\"), \"\\u306Etwilog \\u7248\\u3002\\u3053\\u3063\\u3061\\u306E\\u307B\\u3046\\u304C\\u30B7\\u30F3\\u30D7\\u30EB\\u3002\"), mdx(\"p\", null, \"\\u3067\\u3044\\u3051\\u307E\\u3059\\u3002\"), mdx(\"script\", {\n    src: \"https://gist.github.com/atarukodaka/7a2b8fde0a09e1a5c350.js\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Togetter からテキストのみを抽出するやつ（togetter2text.rb） - Ataru Kodaka Site のtwilog 版。こっちのほうがシンプル。 でいけます。","frontmatter":{"title":"Twilog からテキストのみを抽出するやつ","date":"2015-02-27","toc":null,"image":null,"description":null},"fields":{"directory":"software"}}},"pageContext":{"slug":"software/twilog2text.html","breadcrumb":{"location":"/software/twilog2text.html","crumbs":[{"pathname":"/","crumbLabel":"Home"},{"pathname":"/software","crumbLabel":"ソフトウェア"},{"pathname":"/software/twilog2text.html","crumbLabel":"twilog2text.html"}]}}},"staticQueryHashes":["1280704123","2653269941","2701751953","3140210513","3439333909","4116837195","549307237"]}